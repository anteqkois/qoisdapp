// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  walletAddress String         @unique
  email         String         @unique
  firstName     String
  lastName      String
  nick          String         @unique
  nonce         String?
  linkToDonate  String?
  createdAt     DateTime       @default(now())
  updateAt      DateTime       @updatedAt
  token         Cryptocurrency @relation(fields: [tokenId], references: [id])
  tokenId       String         @unique
  widget        Widget         @relation(fields: [widgetId], references: [id])
  widgetId      String         @unique
  //If it necessary (read speed?)
  // linkToWidget  String?
  // allDonateCount String
  // allDonateValue String
  // allDonateWithdraw String
  Tip           Tip[]
}

model Tip {
  txHash           String         @id @default(cuid()) // useTxHash ?
  tokenAmount      Int
  value            Int
  message          String
  showed           Boolean
  tx               Json
  date             DateTime       @default(now())
  user             User           @relation(fields: [userId], references: [id])
  userId           String
  cryptocurrency   Cryptocurrency @relation(fields: [cryptocurrencyId], references: [id])
  cryptocurrencyId String
  tipper           Tipper         @relation(fields: [tipperId], references: [id])
  tipperId         String
}

model Cryptocurrency {
  id      String @id @default(cuid())
  address String @unique
  symbol  String @unique
  name    String @unique
  chainId Int
  // img
  // price Int?
  User    User?
  Tip     Tip[]
}

model Tipper {
  id            String  @id @default(cuid())
  walletAddress String  @unique
  nick          String  @unique
  nonce         String?
  allTipsValue  Int
  Tip           Tip[]
}

model Widget {
  id              String  @id @default(cuid())
  link            String
  // song
  // background
  // nickColor
  // messageColor
  // valueColor
  // showTime
  filterProfanity Boolean
  // filterWord WordList
  voiceMessage    Boolean
  User            User?
}

//sudo -u postgres psql
