// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}
// npm i --save-dev prisma@latest                       │
// │    npm i @prisma/client@latest
model User {
  walletAddress     String          @id @unique
  email             String          @unique
  firstName         String
  lastName          String
  nick              String          @unique
  nonce             String?
  linkToDonate      String?
  avatarPath        String?
  createdAt         DateTime        @default(now())
  updateAt          DateTime        @updatedAt
  token             Cryptocurrency? @relation(fields: [tokenAddress], references: [address])
  tokenAddress      String?         @unique
  widget            Widget?         @relation(fields: [widgetId], references: [id])
  widgetId          String?         @unique
  //If it necessary below fields (read speed?)
  allDonateCount    Int             @default(0)
  allDonateValue    Int             @default(0)
  allDonateWithdraw Int             @default(0)
  Tip               Tip[]
  Withdraw          Withdraw[]
}

model Tip {
  txHash                String         @id
  tokenAmount           Int
  value                 Int
  message               String
  showed                Boolean
  date                  DateTime       @default(now())
  user                  User           @relation(fields: [userWalletAddress], references: [walletAddress])
  userWalletAddress     String
  cryptocurrency        Cryptocurrency @relation(fields: [cryptocurrencyAddress], references: [address])
  cryptocurrencyAddress String
  tipper                Tipper         @relation(fields: [tipperWalletAddress], references: [walletAddress])
  tipperWalletAddress   String
}

model Cryptocurrency {
  address     String     @id @unique
  symbol      String     @unique
  name        String     @unique
  chainId     Int
  imgPath     String
  latestPrice Int
  User        User?
  Tip         Tip[]
  Withdraw    Withdraw[]
}

model Tipper {
  walletAddress String  @id @unique
  nick          String  @unique
  nonce         String?
  allTipsValue  Int
  Tip           Tip[]
}

model Widget {
  id              String  @id @default(cuid())
  link            String
  songPath        String
  backgroundPath  String
  nickColor       String
  messageColor    String
  valueColor      String
  showTime        Int
  filterProfanity Boolean
  // filterWord WordList
  voiceMessage    Boolean
  User            User?
}

model Withdraw {
  id                    String         @id @default(cuid())
  user                  User           @relation(fields: [userWalletAddress], references: [walletAddress])
  userWalletAddress     String
  amount                Int
  cryptocurrency        Cryptocurrency @relation(fields: [cryptocurrencyAddress], references: [address])
  cryptocurrencyAddress String
  date                  DateTime       @default(now())
  txHash                String         @unique
}

//sudo -u postgres psql
